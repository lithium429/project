<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="entity.LoginLog">  
	<resultMap id="loginLogResult" type="LoginLog">
		<result column="id" property="id" jdbcType="DECIMAL" />
		<result column="user_id" property="user_id" jdbcType="DECIMAL" />
		<result column="type" property="type" jdbcType="DECIMAL" />
		<result column="ip" property="ip" jdbcType="VARCHAR" />
		<result column="create_time" property="create_time"  />
    </resultMap>

	<sql id="sf-loginLog">
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="user_id != null">
				and a.user_id = #{user_id}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="ip != null">
				and a.ip = #{ip}
			</if>
			<if test="create_time != null">
				and a.create_time = #{create_time}
			</if>
			<if test="map.keyword != null">
				and a.keyword like concat('%',#{map.keyword},'%')
			</if>
			<if test="map.user_name != null">
				and b.real_name like concat('%',#{map.user_name},'%')
			</if>
			<if test="map.create_time_min != null">
				and a.create_time >= #{map.create_time_min}
			</if>
			<if test="map.create_time_max != null">
				and #{map.create_time_max} >= a.create_time
			</if>
			<if test="map.ids != null">
				and a.id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
		<if test="map.sort != null">
			order by a.create_time desc
		</if>
	</sql>

	<select id="selectLoginLog" resultType="LoginLog" parameterType="LoginLog">
		select a.*,b.real_name as user_name from login_log a left join user b on a.user_id=b.id
		<include refid="sf-loginLog" />
	</select>
	
	<select id="selectLoginLogList" resultType="LoginLog" parameterType="LoginLog">
		select a.* from login_log a
		<include refid="sf-loginLog" />
	</select>
	
	<select id="selectLoginLogCount" resultType="int" parameterType="LoginLog">
		select count(1) from login_log a left join user b on a.user_id=b.id
		<include refid="sf-loginLog" />
	</select>
	
	<select id="selectLoginLogPageList" resultType="LoginLog" parameterType="LoginLog">
		select a.*,b.real_name as user_name from login_log a left join user b on a.user_id=b.id
		<include refid="sf-loginLog" />
		limit #{map.startIndex},#{map.pageSize}
	</select>
	
	<select id="selectLoginLogSort" resultType="int" parameterType="LoginLog">
		select max(a.id) from login_log a
		<include refid="sf-loginLog" />
	</select>

	<insert id="insertLoginLog" parameterType="LoginLog" useGeneratedKeys="true"
		keyProperty="id"> 
		<![CDATA[insert into login_log (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">id,</if> 
			<if test="user_id != null">user_id,</if> 
			<if test="type != null">type,</if> 
			<if test="ip != null">ip,</if> 
			<if test="create_time != null">create_time,</if> 
		</trim>
		<![CDATA[) values (]]>
		<trim suffixOverrides=",">  
			<if test="id != null">#{id},</if> 
			<if test="user_id != null">#{user_id},</if> 
			<if test="type != null">#{type},</if> 
			<if test="ip != null">#{ip},</if> 
			<if test="create_time != null">#{create_time},</if> 
		</trim>
		<![CDATA[)]]>
	</insert>

	<update id="updateLoginLog" parameterType="LoginLog">
		update login_log
		<set>
			<if test="user_id != null">user_id=#{user_id},</if>
			<if test="type != null">type=#{type},</if>
			<if test="ip != null">ip=#{ip},</if>
			<if test="create_time != null">create_time=#{create_time},</if>
		</set>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</update>
	
	<delete id="deleteLoginLog" parameterType="LoginLog">
		delete from login_log 
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="map.ids != null">
				and id in
				<foreach collection="map.ids" open="(" separator="," close=")"
					index="index" item="item">
					#{item}
				</foreach>
			</if>
		</where>
	</delete>
</mapper>